
#!/bin/bash

OS := $(shell uname)

ifeq ($(OS),Darwin)
	UID = $(shell id -u)
	IP_DEBUG = host.docker.internal
else ifeq ($(OS),Linux)
	UID = $(shell id -u)
	IP_DEBUG = 172.17.0.1
else
	UID = 1000
	IP_DEBUG = host.docker.internal
endif

DOCKER_BE = www

help: ## Show this help message
	@echo 'usage: make [target]'
	@echo
	@echo 'targets:'
	@egrep '^(.+)\:\ ##\ (.+)' ${MAKEFILE_LIST} | column -t -c 2 -s ':#'

start: ## Start the containers
	docker network create www || true
	U_ID=${UID} docker compose up -d

stop: ## Stop the containers
	U_ID=${UID} docker compose stop

restart: ## Restart the containers
	$(MAKE) stop && $(MAKE) start

build: ## Rebuilds all the containers
	docker network create www || true
	U_ID=${UID} docker compose build

prepare: ## Runs backend commands
	$(MAKE) composer-install

delete: ## eliminar contenedor
	U_ID=${UID} docker compose stop $(docker ps -q)
	U_ID=${UID} docker compose stop $(docker ps -aq)
	U_ID=${UID} docker compose rm $(docker ps -aq)
##U_ID=${UID} docker compose rmi $(docker images -a -q)

run: ## starts the test development server in detached mode
	U_ID=${UID} docker exec -it --user ${UID} ${DOCKER_BE} test serve -d

logs: ## Show test logs in real time
	U_ID=${UID} docker exec -it --user ${UID} ${DOCKER_BE} test server:log

# Backend commands
composer-install: ## Installs composer dependencies
	U_ID=${UID} docker exec --user ${UID} ${DOCKER_BE} composer install --no-interaction
# End backend commands

ssh-be: ## bash into the be container
	U_ID=${UID} docker exec -it --user ${UID} ${DOCKER_BE} bash


ssh-logs: ## bash into the be container
	U_ID=${UID} docker logs ${DOCKER_BE} -f
# docker stop $(docker ps -q)
# docker stop $(docker ps -aq)
# docker rm $(docker ps -aq)


#docker rmi $(docker images -a -q)
